{"version":3,"sources":["components/Header.js","components/Home.js","components/Label.js","components/Input.js","components/Select.js","components/Form.js","components/OrderView.js","components/OrderList.js","components/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","exact","to","activeClassName","Component","Home","Label","this","props","hasLabel","htmlFor","label","Input","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","name","value","e","_this2","setState","target","onChange","components_Label","id","max","min","placeholder","required","step","type","bind","Select","selectedOptionsList","options","split","map","opt","key","Form","prev","validate","isError","errors","nameError","emailError","addressError","cityError","phoneError","typeError","sizeError","doughError","email","includes","address","city","phone","length","pizzaType","pizzaSize","pizzaDough","objectSpread","nam","val","defineProperty","preventDefault","err","data","console","log","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","response","catch","error","handleChange","action","onSubmit","handleSubmit","components_Input","components_Select","OrderView","handleDelete","order","_id","handleStatus","completed","index","onClick","React","OrderList","list","handleFetch","assertThisInitialized","filter","elem","deleteID","_this3","concat","status","completeID","_this4","_this5","handleAll","handleCompleted","handleProgress","components_OrderView","NoMatch","App","components_Header","react_router","strict","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8QA8BeA,0LAzBX,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACfH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUC,OAAK,EAACC,GAAI,IAAIC,gBAAkB,aAA1C,SAEFP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASE,GAAK,UAAUC,gBAAkB,aAA1C,UAEFP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASE,GAAK,eAAeC,gBAAkB,YAAYJ,UAAU,cAArE,4BAhBHK,cCgBNC,EAhBJ,WACP,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAME,GAAG,gBAAT,sCCIrCI,mLATT,MAA4B,SAAxBC,KAAKC,MAAMC,SACNb,EAAAC,EAAAC,cAAA,SAAOY,QAASH,KAAKC,MAAME,SAAUH,KAAKC,MAAMG,OAGhD,YANKP,aC2CLQ,cAxCb,SAAAA,EAAYJ,GAAM,IAAAK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAAK,IAChBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAX,KAAMC,KACDW,MAAQ,CACXC,KAAMZ,EAAMY,KACZC,MAAQb,EAAMa,OAJAR,wEAOTS,GAAE,IAAAC,EAAAhB,KACTA,KAAKiB,SAAS,CAACJ,KAAME,EAAEG,OAAOL,KAAMC,MAAOC,EAAEG,OAAOJ,OAAO,WACzDE,EAAKf,MAAMkB,SAASH,EAAKJ,MAAMC,KAAKG,EAAKJ,MAAME,OAC/CE,EAAKC,SAAS,CAACJ,KAAM,GAAIC,MAAO,wCAMlC,OACCzB,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAC6B,EAAD,CACGlB,SAAYF,KAAKC,MAAMC,SACvBC,QAAWH,KAAKC,MAAME,QACtBC,MAASJ,KAAKC,MAAMG,QAEvBf,EAAAC,EAAAC,cAAA,SACG8B,GAAMrB,KAAKC,MAAME,QACjBW,MAASd,KAAKC,MAAMa,MACpBQ,IAAOtB,KAAKC,MAAMqB,KAAO,KACzBC,IAAOvB,KAAKC,MAAMsB,KAAO,KACzBV,KAAQb,KAAKC,MAAMY,MAAQ,KAC3BW,YAAexB,KAAKC,MAAMuB,aAAe,KACzCC,SAAYzB,KAAKC,MAAMwB,UAAY,KACnCC,KAAQ1B,KAAKC,MAAMwB,UAAY,KAC/BE,KAAQ3B,KAAKC,MAAM0B,MAAQ,OAC3BR,SAAYnB,KAAKmB,SAASS,KAAK5B,gBAlCvBH,aC6CLgC,cA7CX,SAAAA,EAAY5B,GAAM,IAAAK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAA6B,IACdvB,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAsB,GAAAlB,KAAAX,KAAMC,KACDW,MAAQ,CACTC,KAAOZ,EAAMY,KACbC,MAAQb,EAAMa,OAJJR,wEAOTS,GAAE,IAAAC,EAAAhB,KACPA,KAAKiB,SAAS,CAACJ,KAAKb,KAAKC,MAAMY,KAAMC,MAAOC,EAAEG,OAAOJ,OAAO,WACxDE,EAAKf,MAAMkB,SAASH,EAAKJ,MAAMC,KAAMG,EAAKJ,MAAME,0CAOpD,IAEMgB,EAFgB9B,KAAKC,MAAM8B,QAAQC,MAAM,MAELC,IAAI,SAACC,GAC3C,OAAO7C,EAAAC,EAAAC,cAAA,UAAQ4C,IAAOD,EAAKpB,MAASoB,GAAOA,KAE/C,OACI7C,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAC6B,EAAD,CACIlB,SAAYF,KAAKC,MAAMC,SACvBC,QAAWH,KAAKC,MAAME,QACtBC,MAASJ,KAAKC,MAAMG,QAGxBf,EAAAC,EAAAC,cAAA,UAAQ4B,SAAUnB,KAAKmB,SAASS,KAAK5B,OAArC,0BAEUA,KAAKC,MAAME,QAFrB,UAGYH,KAAKC,MAAMY,KAHvB,cAIgBb,KAAKC,MAAMwB,UAAY,KAEnCpC,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,IAAd,qBACCgB,WArCAjC,aCgPNuC,cA9Ob,SAAAA,IAAa,IAAA9B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAAoC,IACX9B,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAA6B,GAAAzB,KAAAX,QAyBFqC,KAAO/B,EAAKM,MA1BCN,EA2BbgC,SAAW,WACT,IAAIC,GAAU,EACVC,EAAQ,CACVC,UAAW,GACXC,WAAY,GACZC,aAAc,GACdC,UAAW,GACXC,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,WAAY,IAuCd,MApCuB,KAApB1C,EAAKM,MAAMC,OACZ2B,EAAOC,UAAa,4BACpBF,GAAU,GAERjC,EAAKM,MAAMqC,MAAMC,SAAS,OAC5BV,EAAOE,WAAc,6BACrBH,GAAU,GAEc,KAAvBjC,EAAKM,MAAMuC,UACZX,EAAOG,aAAgB,+BACvBJ,GAAU,GAEW,KAApBjC,EAAKM,MAAMwC,OACZZ,EAAOI,UAAa,4BACpBL,GAAU,GAEmB,KAA5BjC,EAAKM,MAAMyC,MAAMC,SAClBd,EAAOK,WAAc,oCACrBN,GAAU,GAEgB,KAAzBjC,EAAKM,MAAM2C,YACZf,EAAOM,UAAa,4BACpBP,GAAU,GAEgB,KAAzBjC,EAAKM,MAAM4C,YACZhB,EAAOO,UAAa,4BACpBR,GAAU,GAEiB,KAA1BjC,EAAKM,MAAM6C,aACZjB,EAAOQ,WAAc,6BACrBT,GAAU,GAEZjC,EAAKW,SAALV,OAAAmD,EAAA,EAAAnD,CAAA,GACKD,EAAKM,MACL4B,IAEED,GA1EPjC,EAAKM,MAAQ,CACXC,KAAO,GACP4B,UAAW,GACXQ,MAAO,GACPP,WAAY,GACZS,QAAS,GACTR,aAAc,GACdS,KAAM,GACNR,UAAW,GACXS,MAAO,GACPR,WAAY,GACZU,UAAW,GACXT,UAAW,GACXU,UAAW,GACXT,UAAW,GACXU,WAAY,GACZT,WAAY,IAlBH1C,4EAqBAqD,EAAIC,GACf5D,KAAKiB,SAALV,OAAAsD,EAAA,EAAAtD,CAAA,GACGoD,EAAKC,yCAuDG7C,GAAE,IAAAC,EAAAhB,KACbe,EAAE+C,iBACF,IAAMC,EAAO/D,KAAKsC,WACd0B,EAAQ,CACVnD,KAAOb,KAAKY,MAAMC,KAClBoC,MAAQjD,KAAKY,MAAMqC,MACnBE,QAAUnD,KAAKY,MAAMuC,QACrBC,KAAOpD,KAAKY,MAAMwC,KAClBC,MAAQrD,KAAKY,MAAMyC,MACnBE,UAAYvD,KAAKY,MAAM2C,UACvBC,UAAYxD,KAAKY,MAAM4C,UACvBC,WAAazD,KAAKY,MAAM6C,YAE1BQ,QAAQC,IAAI,OAAOF,GACfD,IACFI,MAAM,mCAAmC,CACvCC,OAAS,OACTC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAQ,CACNC,eAAgB,oCAEjBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAClBF,KAAK,SAAAG,GAAQ,OAAIZ,QAAQC,IAAI,WAAYI,KAAKC,UAAUM,MACxDC,MAAM,SAAAC,GAAK,OAAId,QAAQc,MAAM,SAAUA,KACxC/E,KAAKiB,SAAU,CACbJ,KAAO,GACP4B,UAAW,GACXQ,MAAO,GACPP,WAAY,GACZS,QAAS,GACTR,aAAc,GACdS,KAAM,GACNR,UAAW,GACXS,MAAO,GACPR,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,WAAY,IACZ,WACAhC,EAAKgE,aAAa,CAChBnE,KAAK,GACLoC,MAAM,GACNE,QAAQ,GACRC,KAAK,GACLC,MAAM,GACNE,UAAU,GACVC,UAAU,GACVC,WAAW,yCAQjB,OACEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBACbH,EAAAC,EAAAC,cAAA,QAAO8B,GAAK,YAAY+C,OAAS,OAAOa,OAAS,YAAYC,SAAYlF,KAAKmF,aAAavD,KAAK5B,OAC5FX,EAAAC,EAAAC,cAAC6F,EAAD,CACItE,MAASd,KAAKY,MAAMC,KACpBX,SAAW,QACXC,QAAU,OACVU,KAAO,OACPc,KAAO,OACPH,YAAc,OACdL,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAEvCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAM6B,WACrCpD,EAAAC,EAAAC,cAAC6F,EAAD,CACItE,MAASd,KAAKY,MAAMqC,MACpB/C,SAAW,QACXE,MAAQ,UACRD,QAAU,QACVU,KAAO,QACPc,KAAO,QACPH,YAAc,QACdL,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAEvCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAM8B,YACrCrD,EAAAC,EAAAC,cAAC6F,EAAD,CACItE,MAASd,KAAKY,MAAMuC,QACpBjD,SAAW,QACXE,MAAQ,YACRD,QAAU,UACVU,KAAO,UACPc,KAAO,OACPH,YAAc,UACdL,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAEvCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAM+B,cACrCtD,EAAAC,EAAAC,cAAC6F,EAAD,CACItE,MAASd,KAAKY,MAAMwC,KACpBlD,SAAW,QACXE,MAAQ,SACRD,QAAU,OACVU,KAAO,OACPc,KAAO,OACPH,YAAc,OACdL,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAEvCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAMgC,WACrCvD,EAAAC,EAAAC,cAAC6F,EAAD,CACItE,MAASd,KAAKY,MAAMyC,MACpBnD,SAAW,QACXE,MAAQ,iBACRD,QAAU,QACVU,KAAO,QACPc,KAAO,SACPH,YAAc,eACdL,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAEvCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAMiC,YAErCxD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eACbH,EAAAC,EAAAC,cAAC8F,EAAD,CACEvE,MAASd,KAAKY,MAAM2C,UACpBrD,SAAW,OACXW,KAAO,YACPT,MAAQ,aACRD,QAAU,YACV4B,QAAU,4BACVZ,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAErCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAMkC,WACrCzD,EAAAC,EAAAC,cAAC8F,EAAD,CACEvE,MAASd,KAAKY,MAAM4C,UACpB3C,KAAO,YACPX,SAAW,OACXE,MAAQ,OACRD,QAAU,YACV4B,QAAU,wBACVZ,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAErCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAMmC,WACrC1D,EAAAC,EAAAC,cAAC8F,EAAD,CACEvE,MAASd,KAAKY,MAAM6C,WACpB5C,KAAO,aACPX,SAAW,OACXE,MAAQ,QACRD,QAAU,aACV4B,QAAU,wBACVZ,SAAYnB,KAAKgF,aAAapD,KAAK5B,QAErCX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASQ,KAAKY,MAAMoC,aAEzC3D,EAAAC,EAAAC,cAAC6F,EAAD,CACEzD,KAAM,SACNxB,QAAU,cACVW,MAAQ,sBArOXjB,qBCuCJyF,yLAxCPrB,QAAQC,IAAI,UACZlE,KAAKC,MAAMsF,aAAavF,KAAKC,MAAMuF,MAAMC,4CAGzCxB,QAAQC,IAAI,UACZlE,KAAKC,MAAMyF,aAAa1F,KAAKC,MAAMuF,MAAMC,sCAIzC,OADAxB,QAAQC,IAAIlE,KAAKC,MAAMuF,MAAMG,WAEzBtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,qBAAaS,KAAKC,MAAM2F,MAAO,GAC/BvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUQ,KAAKC,MAAMuF,MAAMG,UAAU,YAAY,gBAEpEtG,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,eAAiDH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAMC,MACrGpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,WAA6CH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAM3E,OACjGxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,YAA8CH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAMvC,QAClG5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,cAAgDH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAMrC,UACpG9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,WAA6CH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAMpC,OACjG/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,mBAAqDH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAMnC,QACzGhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,WAA6CH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAMjC,YACjGlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,WAA6CH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAMhC,YACjGnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,cAAlB,YAA8CH,EAAAC,EAAAC,cAAA,YAAOS,KAAKC,MAAMuF,MAAM/B,aAElGpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEPQ,KAAKC,MAAMuF,MAAMG,UACjB,GACAtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8BqG,QAAW7F,KAAK0F,aAAa9D,KAAK5B,OAAOX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAnG,YAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,4BAA4BqG,QAAW7F,KAAKuF,aAAa3D,KAAK5B,OAAOX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAnG,oBAlCAsG,IAAMjG,WCsHfkG,cAnHX,SAAAA,IAAa,IAAAzF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAA+F,IACTzF,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAwF,GAAApF,KAAAX,QACKY,MAAQ,CACToD,KAAM,IAEV1D,EAAK0F,KAAO,GACZ1F,EAAK2F,YAAc3F,EAAK2F,YAAYrE,KAAjBrB,OAAA2F,EAAA,EAAA3F,QAAA2F,EAAA,EAAA3F,CAAAD,KANVA,mFAUTN,KAAKiG,oDAEI,IAAAjF,EAAAhB,KACTmE,MAAM,oCACDO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACFZ,QAAQC,IAAI,UACZlD,EAAKgF,KAAOnB,EACZ7D,EAAKC,SAAS,CACV+C,KAAMhD,EAAKgF,SAIlBlB,MAAM,SAAAf,GACHE,QAAQC,IAAIH,yCAIpB/D,KAAKiB,SAAS,CACV+C,KAAMhE,KAAKgG,OAEf/B,QAAQC,IAAI,iDAGZlE,KAAKiB,SAAS,CACV+C,KAAMhE,KAAKgG,KAAKG,OAAO,SAAAC,GACnB,OAAOA,EAAKT,cAGpB1B,QAAQC,IAAI,sDAGZlE,KAAKiB,SAAS,CACV+C,KAAMhE,KAAKgG,KAAKG,OAAO,SAAAC,GACf,OAAQA,EAAKT,cAGzB1B,QAAQC,IAAI,iDAEHmC,GAAS,IAAAC,EAAAtG,KAClBmE,MAAK,oCAAAoC,OAAqCF,GAAW,CAC7CjC,OAAS,WAEZM,KAAK,SAAAC,GACCA,EAAI6B,QAAU,KACbvC,QAAQC,IAAI,WAEhBS,EAAIC,SAEPF,KAAK,SAAAG,GACFZ,QAAQC,IAAIW,GACZyB,EAAKL,gBAERnB,MAAM,SAAAf,GACHE,QAAQC,IAAIH,0CAGX0C,GAAW,IAAAC,EAAA1G,KACpBmE,MAAK,oCAAAoC,OAAqCE,GAAa,CACnDrC,OAAQ,QAEXM,KAAK,SAAAC,GACCA,EAAI6B,QAAU,KACbvC,QAAQC,IAAI,WAEhBS,EAAIC,SAEPF,KAAK,SAAAG,GACFZ,QAAQC,IAAIW,GACZ6B,EAAKT,gBAGRnB,MAAM,SAAAf,GACHE,QAAQC,IAAIH,sCAGZ,IAAA4C,EAAA3G,KACJ,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QACbH,EAAAC,EAAAC,cAAA,OAAKsG,QAAW7F,KAAK4G,UAAUhF,KAAK5B,OAApC,OACAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKsG,QAAW7F,KAAK6G,gBAAgBjF,KAAK5B,OAA1C,aACAX,EAAAC,EAAAC,cAAA,OAAKsG,QAAW7F,KAAK8G,eAAelF,KAAK5B,OAAzC,iBAIJA,KAAKY,MAAMoD,KAAK/B,IAAI,SAACuD,EAAMrD,GAAP,OAChB9C,EAAAC,EAAAC,cAACwH,EAAD,CAAWvB,MAASA,EAAQrD,IAAOA,EAAKyD,MAASzD,EAAKoD,aAAgBoB,EAAKpB,aAAa3D,KAAK+E,GAAOjB,aAAgBiB,EAAKjB,aAAa9D,KAAK+E,iBAtGnJ9G,aCeTmH,EAhBD,WACV,OACI3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kCCmBT0H,mLAjBX,OACE5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2H,EAAD,MACA7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACE9H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOzH,OAAK,EAAC0H,QAAM,EAACC,KAAK,IAAIC,UAAWxH,IACxCT,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,SACVhI,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAUxH,GAAK,OAEjBN,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAO,eAAeC,UAAalF,IAC1C/C,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAO,UAAUC,UAAavB,IACrC1G,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOG,UAAaN,aAZZnH,aCEE0H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACLxI,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACuI,EAAD,OAEFC,SAASC,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzD,KAAK,SAAA0D,GACjCA,EAAaC","file":"static/js/main.052eeeff.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {NavLink} from 'react-router-dom'\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n      \t\t<div className = \"container\">\n                <div className = \"header-content\">\n                  <div className = \"logo\">PIZZA LO</div>\n                  <div className = \"navbar\">\n                    <ul>\n                      <li>\n                        <NavLink  exact to ='/' activeClassName = \"activeNav\">Home</NavLink>\n                      </li>\n                      <li>\n                        <NavLink to = '/orders' activeClassName = \"activeNav\">Order</NavLink>\n                      </li>\n                      <li>\n                        <NavLink to = '/placeorders' activeClassName = \"activeNav\" className=\"placeOrder\">Place Order</NavLink>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n          </div>\n      </header> \n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nlet Home = () => {\n    return(\n        <div className=\"homeContent\">\n            <div className=\"container\">\n                <div className=\"homeContainer\">\n                    <div className=\"home\">\n                        <div>Pizza Lo</div>\n                        <div className=\"homeButton\"><Link to=\"/placeorders\">Place Orders</Link></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Home;","import React, { Component } from 'react';\n\n\nclass Label extends Component {\n    render() {\n      if (this.props.hasLabel === 'true') {\n        return <label htmlFor={this.props.htmlFor}>{this.props.label}</label>\n      }\n      else {\n        return null;\n      }\n    }\n  }\n\nexport default Label;","import React, { Component } from 'react';\n\nimport Label from './Label';\n\n\nclass Input extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: props.name,\n      value : props.value\n    }\n  }\n  onChange(e){\n    this.setState({name: e.target.name, value: e.target.value},() => {\n      this.props.onChange(this.state.name,this.state.value);\n      this.setState({name: '', value: ''});\n    });\n    \n  }\n\n  render() {\n    return (\n     <fieldset>\n         <Label \n            hasLabel = {this.props.hasLabel}\n            htmlFor = {this.props.htmlFor}\n            label = {this.props.label}\n         />\n         <input\n            id = {this.props.htmlFor}\n            value = {this.props.value}\n            max = {this.props.max || null}\n            min = {this.props.min || null}\n            name = {this.props.name || null}\n            placeholder = {this.props.placeholder || null}\n            required = {this.props.required || null}\n            step = {this.props.required || null}\n            type = {this.props.type || 'text'}\n            onChange = {this.onChange.bind(this)}\n         />\n     </fieldset>\n    );\n  }\n}\n\nexport default Input;","import React, { Component } from 'react';\n\nimport Label from './Label';\n\nclass Select extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name : props.name,\n            value : props.value\n        }\n    }\n    onChange(e){\n        this.setState({name:this.props.name, value: e.target.value},() => {\n            this.props.onChange(this.state.name, this.state.value);\n            \n        });\n    }\n\n\n    render(){\n        const selectOptions = this.props.options.split(', ');\n\n        const selectedOptionsList = selectOptions.map((opt) => {\n            return <option key = {opt} value = {opt} >{opt}</option>\n        })\n        return(\n            <fieldset>\n                <Label \n                    hasLabel = {this.props.hasLabel}\n                    htmlFor = {this.props.htmlFor}\n                    label = {this.props.label}\n                />\n\n                <select onChange={this.onChange.bind(this)}>\n                    defaultValue = ''\n                    id = {this.props.htmlFor}\n                    name = {this.props.name}\n                    required = {this.props.required || null}\n\n                    <option value=''>Select one option</option>\n                    {selectedOptionsList}\n                </select>\n            </fieldset>\n        )\n    }\n} \n\n\n\nexport default Select;","import React, { Component } from 'react';\n\nimport Input from './Input';\nimport Select from './Select';\n\nclass Form extends Component {\n  constructor(){\n    super()\n    this.state = {\n      name : '',\n      nameError: '',\n      email: '',\n      emailError: '',\n      address: '',\n      addressError: '',\n      city: '',\n      cityError: '',\n      phone: '',\n      phoneError: '',\n      pizzaType: '',\n      typeError: '',\n      pizzaSize: '',\n      sizeError: '',\n      pizzaDough: '',\n      doughError: ''\n    }\n  }\n  handleChange(nam,val){\n    this.setState({\n      [nam]:val\n    })\n  }\n  prev = this.state;\n  validate = () =>{\n    let isError = false;\n    let errors ={\n      nameError: '',\n      emailError: '',\n      addressError: '',\n      cityError: '',\n      phoneError: '',\n      typeError: '',\n      sizeError: '',\n      doughError: ''\n    }\n\n    if(this.state.name === ''){\n      errors.nameError  = 'Please enter a valid name';\n      isError = true;\n    }\n    if(!this.state.email.includes('@')){\n      errors.emailError  = 'Please enter a valid Email';\n      isError = true;\n    }\n    if(this.state.address === ''){\n      errors.addressError  = 'Please enter a valid address';\n      isError = true;\n    }\n    if(this.state.city === ''){\n      errors.cityError  = 'Please enter a valid city';\n      isError = true;\n    }\n    if(this.state.phone.length !== 10){\n      errors.phoneError  = 'Please enter a valid phone number';\n      isError = true;\n    }\n    if(this.state.pizzaType === ''){\n      errors.typeError  = 'Please enter a valid Type';\n      isError = true;\n    }\n    if(this.state.pizzaSize === ''){\n      errors.sizeError  = 'Please enter a valid Size';\n      isError = true;\n    }\n    if(this.state.pizzaDough === ''){\n      errors.doughError  = 'Please enter a valid Dough';\n      isError = true;\n    }\n    this.setState({\n      ...this.state ,\n      ...errors\n    }); \n    return isError;\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    const err  = this.validate();\n    let data  = {\n      name : this.state.name,\n      email : this.state.email,\n      address : this.state.address,\n      city : this.state.city,\n      phone : this.state.phone,\n      pizzaType : this.state.pizzaType,\n      pizzaSize : this.state.pizzaSize,\n      pizzaDough : this.state.pizzaDough\n    }\n    console.log('Data',data)\n    if(!err){\n      fetch('http://127.0.0.1:5000/api/orders',{\n        method : 'POST',\n        body: JSON.stringify(data),\n        headers:{\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      }).then(res => res.json())\n      .then(response => console.log('Success:', JSON.stringify(response)))\n      .catch(error => console.error('Error:', error));\n      this.setState ({\n        name : '',\n        nameError: '',\n        email: '',\n        emailError: '',\n        address: '',\n        addressError: '',\n        city: '',\n        cityError: '',\n        phone: '',\n        phoneError: '',\n        typeError: '',\n        sizeError: '',\n        doughError: ''\n      },() => {\n        this.handleChange({\n          name:'',\n          email:'',\n          address:'',\n          city:'',\n          phone:'',\n          pizzaType:'',\n          pizzaSize:'',\n          pizzaDough:''\n        });\n      })\n      \n    }\n  }\n\n  render() {\n    return (\n      <div className =\"formContent\">\n        <div className = 'container'>\n            <div className = \"formContainer\">\n                <form  id = 'orderForm' method = 'POST' action = '/addOrder' onSubmit = {this.handleSubmit.bind(this)}>\n                    <Input \n                        value = {this.state.name}\n                        hasLabel = 'false'\n                        htmlFor = 'name'\n                        name = 'name'\n                        type = 'text'\n                        placeholder = 'Name'\n                        onChange = {this.handleChange.bind(this)}\n                    />\n                    <div className = \"error\">{this.state.nameError}</div>\n                    <Input \n                        value = {this.state.email}\n                        hasLabel = 'false'\n                        label = 'Email: '\n                        htmlFor = 'email'\n                        name = 'email'\n                        type = 'email'\n                        placeholder = 'Email'\n                        onChange = {this.handleChange.bind(this)}\n                    />\n                    <div className = \"error\">{this.state.emailError}</div>\n                    <Input \n                        value = {this.state.address}\n                        hasLabel = 'false'\n                        label = 'Address: '\n                        htmlFor = 'address'\n                        name = 'address'\n                        type = 'text'\n                        placeholder = 'Address'\n                        onChange = {this.handleChange.bind(this)}\n                    />\n                    <div className = \"error\">{this.state.addressError}</div>\n                    <Input \n                        value = {this.state.city}\n                        hasLabel = 'false'\n                        label = 'City: '\n                        htmlFor = 'city'\n                        name = 'city'\n                        type = 'text'\n                        placeholder = 'City'\n                        onChange = {this.handleChange.bind(this)}\n                    />\n                    <div className = \"error\">{this.state.cityError}</div>\n                    <Input \n                        value = {this.state.phone}\n                        hasLabel = 'false'\n                        label = 'Phone Number: '\n                        htmlFor = 'phone'\n                        name = 'phone'\n                        type = 'number'\n                        placeholder = 'Phone Number'\n                        onChange = {this.handleChange.bind(this)}\n                    />\n                    <div className = \"error\">{this.state.phoneError}</div>\n\n                    <div className = 'pizzaChoice'>\n                        <Select \n                          value = {this.state.pizzaType}\n                          hasLabel = 'true'\n                          name = 'pizzaType'\n                          label = 'Pizza Type'\n                          htmlFor = 'pizzaType'\n                          options = 'Corn, Margreeta, Capsicum'\n                          onChange = {this.handleChange.bind(this)}\n                        />\n                        <div className = \"error\">{this.state.typeError}</div>\n                        <Select \n                          value = {this.state.pizzaSize}\n                          name = 'pizzaSize'\n                          hasLabel = 'true'\n                          label = 'Size'\n                          htmlFor = 'pizzaSize'\n                          options = 'Regular, Small, Large'\n                          onChange = {this.handleChange.bind(this)}\n                        />\n                        <div className = \"error\">{this.state.sizeError}</div>\n                        <Select \n                          value = {this.state.pizzaDough}\n                          name = 'pizzaDough'\n                          hasLabel = 'true'\n                          label = 'Dough'\n                          htmlFor = 'pizzaDough'\n                          options = 'Regular, Small, Large'\n                          onChange = {this.handleChange.bind(this)}\n                        />\n                        <div className = \"error\">{this.state.doughError}</div>\n                    </div>\n                    <Input \n                      type ='Submit'\n                      htmlFor = 'orderSubmit'\n                      value = 'Submit'\n                    />\n                </form>\n            </div>\n         </div> \n      </div>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\n\nclass OrderView extends React.Component{\n    handleDelete(){\n        console.log(\"hiiiii\");\n        this.props.handleDelete(this.props.order._id);\n    }\n    handleStatus(){\n        console.log(\"hiiiii\");\n        this.props.handleStatus(this.props.order._id);\n    }\n    render(){\n        console.log(this.props.order.completed)\n        return(\n            <div className=\"orderContainer\">\n                <div className=\"orderNo\">\n                    <div>Order #{this.props.index +1}</div>\n                    <div className=\"status\">{this.props.order.completed?\"Completed\":\"In Progress\"}</div>\n                </div>\n                <div className =\"orderValues\">\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Order ID:  </span><span>{this.props.order._id}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Name:  </span><span>{this.props.order.name}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Email:  </span><span>{this.props.order.email}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Address:  </span><span>{this.props.order.address}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">City:  </span><span>{this.props.order.city}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Phone Number:  </span><span>{this.props.order.phone}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Type:  </span><span>{this.props.order.pizzaType}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Size:  </span><span>{this.props.order.pizzaSize}</span></div>\n                    <div className=\"orderValue\"><span className = \"valueTitle\">Dough:  </span><span>{this.props.order.pizzaDough}</span></div>\n                    \n                    <div className=\"orderStatus\">\n                        {\n                            this.props.order.completed ?\n                            '':\n                            <div className=\"statusButton completeStatus\" onClick = {this.handleStatus.bind(this)}><i className=\"fa fa-check\"></i>Complete</div>\n                        }\n                        <div className = \"statusButton deleteStatus\" onClick = {this.handleDelete.bind(this)}><i className=\"fa fa-trash\"></i>Delete</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OrderView;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport OrderView from './OrderView';\n\n\nclass OrderList extends Component{\n    constructor(){\n        super();\n        this.state = {\n            data: []\n        }\n        this.list = [];\n        this.handleFetch = this.handleFetch.bind(this)\n    }\n\n    componentDidMount(){\n        this.handleFetch(); \n    }\n    handleFetch(){\n        fetch('http://127.0.0.1:5000/api/orders')\n            .then(res => res.json())\n            .then(response => {\n                console.log(\"called\")\n                this.list = response;\n                this.setState({\n                    data: this.list\n                })\n\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    handleAll(){\n        this.setState({\n            data: this.list\n        })\n        console.log(\"All\")\n    }\n    handleCompleted(){\n        this.setState({\n            data: this.list.filter(elem => {\n                return elem.completed;\n           })\n        })\n        console.log(\"Completed\")\n    }\n    handleProgress(){\n        this.setState({\n            data: this.list.filter(elem => {\n                    return !elem.completed;\n                })\n        })\n        console.log(\"Progress\")\n    }\n    handleDelete(deleteID){\n        fetch(`http://127.0.0.1:5000/api/orders/${deleteID}`,{\n                method : 'DELETE'\n            })\n            .then(res => {\n                if(res.status >= 400){\n                    console.log('Failure')\n                }\n                res.json();\n            })\n            .then(response => {\n                console.log(response)\n                this.handleFetch();\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n    }\n    handleStatus(completeID){\n        fetch(`http://127.0.0.1:5000/api/orders/${completeID}`,{\n            method: 'PUT'\n        })\n        .then(res=>{\n            if(res.status >= 400){\n                console.log('Failure')\n            }\n            res.json();\n        })\n        .then(response => {\n            console.log(response)\n            this.handleFetch();\n            \n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    render(){\n        return(\n            <div className = \"orderContent\">\n                <div className =\"container\">\n                    <div className =\"ordersContainer\">\n                        <div className=\"orderTitle\">Orders</div>\n                        <div className = \"sort\">\n                            <div onClick = {this.handleAll.bind(this)}>ALL</div>\n                            <div className=\"filter\">\n                                <div onClick = {this.handleCompleted.bind(this)}>Completed</div>\n                                <div onClick = {this.handleProgress.bind(this)}>In Progress</div>\n                            </div>\n                        </div>\n                        {\n                            this.state.data.map((order,key) => \n                                <OrderView order = {order}  key = {key} index = {key} handleDelete = {this.handleDelete.bind(this)} handleStatus = {this.handleStatus.bind(this)}/>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\n\n\nexport default OrderList;","import React from 'react';\n\n\nlet NoMatch = () => {\n    return(\n        <div className=\"errorContent\">\n            <div className=\"container\">\n                <div className = \"errorContainer\">\n                    <div className=\"errorMessage\">\n                        <div>404</div>\n                        <div>Page not found</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default NoMatch;","import React, { Component } from 'react';\nimport {Route, Switch,Redirect} from 'react-router-dom';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Home from './components/Home'\nimport Form from './components/Form';\nimport OrderList from './components/OrderList';\nimport NoMatch from './components/NoMatch';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact strict path='/' component={Home}/> \n          <Route path='/home'>\n            <Redirect to = \"/\"/>\n          </Route>\n          <Route path = '/placeorders' component = {Form}/>\n          <Route path = '/orders' component = {OrderList}/>\n          <Route component = {NoMatch} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}